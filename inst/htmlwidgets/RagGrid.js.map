{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascript/RagGrid.js"],"names":["HTMLWidgets","widget","name","type","factory","el","width","height","gridOptions","sel_handle","crosstalk","SelectionHandle","filter_handle","FilterHandle","on","e","sender","api","forEachNode","node","data","ctKey","value","indexOf","setSelected","console","log","renderValue","x","defaultGridOptions","rowSelection","enableSorting","enableFilter","groupMultiAutoColumn","groupSuppressAutoColumn","enableRangeSelection","enableColResize","pagination","paginationAutoPageSize","onRowClicked","selectionKeys","getSelectedNodes","forEach","push","set","licenseKey","enterpriseGridOptions","enableStatusBar","alwaysShowStatusBar","Object","assign","settings","crosstalk_group","setGroup","rowHeaders","keys","length","filedRowHeaderMap","rowHeader","replace","rowLength","colDef","map","options","enableValue","isNumeric","enterpriseColumnDefinitionOptions","enableRowGroup","enablePivot","rowDataList","rowIndex","rowData","crosstalk_key","agGrid","LicenseManager","setLicenseKey","columnDefs","setAttribute","Grid","resize"],"mappings":"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","file":"RagGrid.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","HTMLWidgets.widget({\n\n  name: 'RagGrid',\n\n  type: 'output',\n\n  factory: function(el, width, height) {\n    let gridOptions={};\n    // TODO: define shared variables for this instance\n    const sel_handle = new crosstalk.SelectionHandle();\n    const filter_handle = new crosstalk.FilterHandle();\n    sel_handle.on(\"change\", function(e) {\n      if (e.sender !== sel_handle) {\n        // scatter.clearBrush(); \n        gridOptions.api.forEachNode((node)=>{\n        if(node.data && node.data.ctKey && e.value.indexOf(node.data.ctKey)!=-1){\n          node.setSelected(true);\n        }\n        else{\n          node.setSelected(false);\n        }\n      });\n      }\n \n      console.log(e);\n    });\n    filter_handle.on(\"change\", function(e) {\n      // scatter.filter(e.value);\n      console.log(e);\n    });\n    return {\n\n      renderValue: function(x) {\n         const data=x.data;\n        \n         let defaultGridOptions={\n            rowSelection: 'multiple',\n            enableSorting: true,\n            enableFilter: true,\n            groupMultiAutoColumn: true,\n            groupSuppressAutoColumn: true,\n            enableRangeSelection: false,\n            enableColResize: true,\n            pagination: true,\n            paginationAutoPageSize: true,\n            onRowClicked: event =>{\n                let selectionKeys=[];\n                gridOptions.api.getSelectedNodes().forEach(node => {\n                  if(node.data && node.data.ctKey){\n                    selectionKeys.push(node.data.ctKey);\n                  }\n                });\n                sel_handle.set(selectionKeys);\n            }\n         }\n\n         if(x.licenseKey){\n          let enterpriseGridOptions = {\n              enableStatusBar: true,\n              alwaysShowStatusBar: false, // status bar can be be fixed\n          }\n          defaultGridOptions=Object.assign(defaultGridOptions,enterpriseGridOptions);\n        }\n         \n         if(x.settings.crosstalk_group){\n           sel_handle.setGroup(x.settings.crosstalk_group);\n           filter_handle.setGroup(x.settings.crosstalk_group);\n         }\n\n         gridOptions=Object.assign(defaultGridOptions,x.gridOptions);\n         const rowHeaders = Object.keys(data);\n         if(rowHeaders.length==0){\n           return;\n         }\n         let filedRowHeaderMap={};\n         rowHeaders.forEach((rowHeader)=>{\n           filedRowHeaderMap[rowHeader]=rowHeader.replace(\".\",\"_\");\n         });\n         const rowLength = data[rowHeaders[0]].length;\n         const colDef = rowHeaders.map((rowHeader)=>{\n          let options =  {'headerName':rowHeader,'field':filedRowHeaderMap[rowHeader],\n                          enableValue:x.isNumeric[rowHeader] };\n\n          let enterpriseColumnDefinitionOptions = x.licenseKey ? {\n            enableRowGroup:!x.isNumeric[rowHeader],\n            enablePivot:!x.isNumeric[rowHeader]\n           }:{};\n           return Object.assign(options,enterpriseColumnDefinitionOptions);\n         });\n         let rowDataList=[];\n         for(let rowIndex=0;rowIndex<rowLength;rowIndex++){\n            let rowData = {};\n            rowHeaders.forEach((rowHeader)=>{\n                rowData[filedRowHeaderMap[rowHeader]] = data[rowHeader][rowIndex];\n            });\n            if(x.settings.crosstalk_key){\n               rowData.ctKey=x.settings.crosstalk_key[rowIndex];\n            }\n            rowDataList.push(rowData);\n         }\n         if(x.licenseKey){\n          agGrid.LicenseManager.setLicenseKey(x.licenseKey);\n         }\n         gridOptions.columnDefs=colDef;\n         gridOptions.rowData=rowDataList;\n\n        el.setAttribute(\"class\",\"ag-theme-balham\");\n        new agGrid.Grid(el, gridOptions);\n        // TODO: code to render the widget, e.g.\n        //el.innerText = x.message;\n\n      },\n\n      resize: function(width, height) {\n\n        // TODO: code to re-render the widget with a new size\n\n      }\n\n    };\n  }\n});\n"],"sourceRoot":""}